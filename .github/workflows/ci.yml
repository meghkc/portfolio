name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-security:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Early diagnostics
        run: |
          set -euxo pipefail
          python -V
          python -c "import sys,platform;print('Platform:',platform.platform());print('Prefix:',sys.prefix)"
          pip --version
          pip debug --verbose || true
          echo "Attempting verbose pip-tools install (will re-run in normal step)."
          pip install -vvv pip-tools || echo "pip-tools initial install failed (will attempt again)."

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Verify constraints consistency (only on baseline Python 3.11)
        if: matrix.python-version == '3.11'
        run: |
          pip-compile --generate-hashes --output-file temp_constraints.txt pyproject.toml
          diff -u constraints.txt temp_constraints.txt || (echo "Constraints drift detected. Run pip-compile --generate-hashes and commit updated constraints.txt" && exit 1)

      - name: Install project (with dev extras + unified constraints)
        run: |
          pip install --upgrade pip
          pip install -r constraints.txt
          pip install .[dev] --constraint constraints.txt
          pip install -r requirements.txt --constraint constraints.txt

      - name: Show pip environment
        run: |
          python -V
          pip --version
          pip list --format=columns | sort | head -n 40
          echo "Installed package count:" $(pip list --format=freeze | wc -l)

      - name: Run tests
        run: pytest -q

      - name: Bandit security scan
        run: bandit -r . -q -ll || true

      - name: Safety vulnerability scan
        run: |
          pip install safety
          safety check --full-report || true

      - name: Upload test artifacts (logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            portfolio_automation.log
            docs/images/composite_trends.png
          if-no-files-found: ignore

  pip-compile-refresh:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Refresh constraints
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
          pip-compile --generate-hashes --output-file constraints.txt pyproject.toml
      - name: Commit updated constraints
        run: |
          if git diff --quiet constraints.txt; then
            echo "No changes to constraints.txt"
          else
            git config user.name "github-actions"
            git config user.email "actions@users.noreply.github.com"
            git add constraints.txt
            git commit -m "chore: refresh dependency constraints"
            git push
          fi
